# Generated by Django 4.2.4 on 2023-10-29 07:35

import datetime
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import shop.models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("menu", "0003_alter_menuitem_code"),
    ]

    operations = [
        migrations.CreateModel(
            name="Customer",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("last_modified", models.DateTimeField(auto_now=True)),
                ("phone_number", models.CharField(max_length=50)),
                ("country", models.CharField(max_length=100)),
                ("street_address", models.CharField(max_length=100)),
                ("address_line_2", models.CharField(default="", max_length=100)),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="DiscountCode",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("last_modified", models.DateTimeField(auto_now=True)),
                (
                    "code",
                    models.CharField(
                        default=shop.models.ShopHelper.generate_unique_discount_code, max_length=5
                    ),
                ),
                (
                    "discount_percentage",
                    models.FloatField(
                        validators=[django.core.validators.MinValueValidator(limit_value=0.0)]
                    ),
                ),
                ("expiry_date", models.DateField()),
                ("expiry_time", models.TimeField(default=datetime.time(0, 0))),
            ],
            options={
                "verbose_name": "Discount Code",
                "verbose_name_plural": "Discount Codes",
            },
        ),
        migrations.CreateModel(
            name="Order",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("last_modified", models.DateTimeField(auto_now=True)),
                (
                    "status",
                    models.IntegerField(
                        choices=[
                            (1, "Received"),
                            (2, "Cooking"),
                            (3, "Packaging"),
                            (4, "OnDelivery"),
                            (5, "Delivered"),
                        ],
                        default=1,
                    ),
                ),
                (
                    "total",
                    models.FloatField(
                        default=0,
                        validators=[django.core.validators.MinValueValidator(limit_value=0.0)],
                    ),
                ),
                ("order_notes", models.TextField(default="")),
                (
                    "customer",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="orders",
                        to="shop.customer",
                    ),
                ),
                (
                    "discount_code",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="orders",
                        to="shop.discountcode",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="OrderItem",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("last_modified", models.DateTimeField(auto_now=True)),
                (
                    "quantity",
                    models.IntegerField(
                        validators=[django.core.validators.MinValueValidator(limit_value=0)]
                    ),
                ),
                (
                    "total",
                    models.FloatField(
                        validators=[django.core.validators.MinValueValidator(limit_value=0.0)]
                    ),
                ),
                (
                    "item",
                    models.ForeignKey(
                        null=True, on_delete=django.db.models.deletion.SET_NULL, to="menu.menuitem"
                    ),
                ),
                (
                    "order",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="items",
                        to="shop.order",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
    ]
